from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# ‡§¨‡•â‡§ü ‡§ï‡§æ ‡§ü‡•ã‡§ï‡§® (‡§Ö‡§™‡§®‡§æ ‡§ü‡•ã‡§ï‡§® ‡§Ø‡§π‡§æ‡§Ç ‡§°‡§æ‡§≤‡•á‡§Ç)
TOKEN = '7034919230:AAFs4AiMivV2BNuy3VxHBkE8CHm0F2sFC8c'

# ‡§ó‡•á‡§Æ‡•ç‡§∏ ‡§ï‡•Ä ‡§∏‡•Ç‡§ö‡•Ä (‡§µ‡•á‡§¨ ‡§ê‡§™‡•ç‡§∏ ‡§ï‡•á URL)
color_trading_games = {
    "IPL.WIN ‚Çπ117üáÆüá≥": {
        "url": "https://www.iplinvip.com/?dl=$arr9f7$INR$4",
        "description": "Great Choice üôÇ Signup And Get ‚Çπ117"
    },
    "Lottery 7 ‚Çπ77üáÆüá≥": {
        "url": "https://lottery7y.com/#/register?invitationCode=2653612802163",
        "description": "Great Choice üôÇ Signup And Get ‚Çπ77"
    },
    "BDG.WIN ‚Çπ58üáÆüá≥": {
        "url": "https://www.bigdaddygame.co//#/register?invitationCode=224112998604",
        "description": "Great Choice üôÇ Signup And Get ‚Çπ58"
    },
    "BBGO ‚Çπ58üáÆüá≥": {
        "url": "https://www.bbgo01.vip/#/register?invitationCode=688571020981",
        "description": "Great Choice üôÇ Signup And Get ‚Çπ58 This App Lounch In 2025"
    },
    "51 Game ‚Çπ51üáÆüá≥": {
        "url": "https://51game7.in/#/register?invitationCode=582181716687",
        "description": "Great Choice üôÇ Signup And Get ‚Çπ51"
    },
    "66 Lottery ‚Çπ66üáÆüá≥": {
        "url": "https://www.66lotterybkhn.com/#/pages/login/register?invitationCode=0946849507",
        "description": "Great Choice üôÇ Signup And Get ‚Çπ66"
    },
    "Raja Game ‚Çπ38üáÆüá≥": {
        "url": "https://www.rajalucky.in/#/register?invitationCode=45463988437",
        "description": "Great Choice üôÇ Signup And Get ‚Çπ38"
    },
    "6 Club ‚Çπ58üáÆüá≥": {
        "url": "https://www.6club11.com/#/register?invitationCode=75715118183",
        "description": "Great Choice üôÇ Signup And Get ‚Çπ58"
    },
    "DiuWin ‚Çπ57üáÆüá≥": {
        "url": "https://diuwinapp.club/#/register?invitationCode=46458365419",
        "description": "Great Choice üôÇ Signup And Get ‚Çπ57"
    },
    "RajaLuck ‚Çπ28üáÆüá≥": {
        "url": "https://rajaluck.world/#/register?invitationCode=LHgTB38426",
        "description": "Great Choice üôÇ Signup And Get ‚Çπ28"
    },
    "Z65.Win ‚Çπ58üáÆüá≥": {
        "url": "https://z65win.com/#/register?invitationCode=815269998682",
        "description": "Great Choice üôÇ Signup And Get ‚Çπ58 This App Lounch In 1 Jan 2025"
    },
    "Ok Win ‚Çπ28üáÆüá≥": {
        "url": "https://okwin9.in/#/register?invitationCode=78466476960",
        "description": "Great Choice üôÇ Signup And Get ‚Çπ28"
    }
}

slots_games = {
    # Slots games ‡§ï‡•Ä ‡§∏‡•Ç‡§ö‡•Ä ‡§Ø‡§π‡§æ‡§Å ‡§ú‡•ã‡§°‡§º‡•á‡§Ç (‡§Ø‡§¶‡§ø ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§π‡•ã)
}

# /start ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡§æ ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_first_name = update.message.from_user.first_name
    keyboard = [
        [InlineKeyboardButton("Color Trading", callback_data='color_trading')],
        [InlineKeyboardButton("Slots Game", callback_data='slots')],
        [InlineKeyboardButton("Join Our Channel", url='https://t.me/yourchannel')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        f"Welcome {user_first_name}! ‡§Ü‡§™ ‡§ï‡§ø‡§∏ ‡§§‡§∞‡§π ‡§ï‡•á ‡§ó‡•á‡§Æ ‡§ñ‡•á‡§≤‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?",
        reply_markup=reply_markup
    )

# ‡§ó‡•á‡§Æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ö‡§Ø‡§® ‡§ï‡§æ ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
async def select_game_type(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    selected_type = query.data
    if selected_type == 'color_trading':
        games = color_trading_games
        context.user_data['selected_type'] = 'color_trading'
    elif selected_type == 'slots':
        games = slots_games
        context.user_data['selected_type'] = 'slots'
    else:
        return

    keyboard = [
        [InlineKeyboardButton(game, callback_data=f"game_{game}")] for game in games.keys()
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        text="Great Choice! ‡§ï‡•É‡§™‡§Ø‡§æ ‡§è‡§ï ‡§ó‡•á‡§Æ ‡§ö‡•Å‡§®‡•á‡§Ç ‡§ú‡§ø‡§∏‡•á ‡§Ü‡§™ ‡§ñ‡•á‡§≤‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç:",
        reply_markup=reply_markup
    )

# ‡§ó‡•á‡§Æ ‡§ö‡§Ø‡§® ‡§ï‡§æ ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
async def select_game(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    selected_game = query.data[len("game_"):]
    selected_type = context.user_data.get('selected_type')
    if selected_type == 'color_trading':
        game_info = color_trading_games.get(selected_game)
    elif selected_type == 'slots':
        game_info = slots_games.get(selected_game)
    else:
        game_info = None

    if not game_info:
        return

    game_url = game_info["url"]
    game_description = game_info["description"]

    await query.edit_message_text(
        text=f"{selected_game}\n\n{game_description}",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("Play Now", url=game_url)],
            [InlineKeyboardButton("Back to Games", callback_data=selected_type)]
        ])
    )

# ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§ú‡•ã ‡§¨‡•â‡§ü ‡§ï‡•ã ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§§‡§æ ‡§π‡•à
def main() -> None:
    # Application ‡§ï‡•ã ‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç
    application = Application.builder().token(TOKEN).build()

    # ‡§π‡•à‡§Ç‡§°‡§≤‡§∞‡•ç‡§∏ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(select_game_type, pattern='^(color_trading|slots)$'))
    application.add_handler(CallbackQueryHandler(select_game, pattern='^game_'))

    # ‡§¨‡•â‡§ü ‡§ï‡•ã ‡§™‡•ã‡§≤‡§ø‡§Ç‡§ó ‡§Æ‡•ã‡§° ‡§Æ‡•á‡§Ç ‡§ö‡§≤‡§æ‡§®‡§æ
    application.run_polling()

if __name__ == '__main__':
    main()